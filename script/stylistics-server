#!perl

use strict;
use utf8;

use File::Spec;
use File::Basename;
use lib File::Spec->catdir(dirname(__FILE__), '../lib');

use Log::Dispatch;

use Plack::Builder;

use Stylistics::Web;
use Stylistics;
use Plack::Session::Store::File;
use Plack::Session::State::Cookie;
use URI::Escape;
use File::Path ();

my $session_dir = File::Spec->catdir( 
		File::Spec->tmpdir,
		uri_escape("Stylistics") . "-$<"
		);

File::Path::mkpath($session_dir);

my $app = builder {
	my $logger = Log::Dispatch->new(
			outputs => [
				[
					'File',
					min_level => 'info',
					filename  => '/var/log/stylistics/access.log',
                    mode      => 'append',
				],
			],
			);

	enable 'Plack::Middleware::AccessLog',
		   logger => sub { $logger->log( level => 'info', message => @_ ) };

    enable 'Plack::Middleware::Static',
        path => qr{^(?:/static/)},
        root => File::Spec->catdir(dirname(__FILE__), '..');

	enable 'Plack::Middleware::Static',
        path => qr{^(?:/robots\.txt|/favicon\.ico)$},
        root => File::Spec->catdir(dirname(__FILE__), '..', 'static');

    Stylistics::Web->to_app();
};

unless (caller) {
    my $port        = 5000;
    my $host        = 'localhost';
	my $user        = 'nobody';
	my $group       = 'nobody';
    my $max_workers = 4;

    require Getopt::Long;
    require Plack::Loader;
    my $p = Getopt::Long::Parser->new(
        config => [qw(posix_default no_ignore_case auto_help)]
    );

	$p->getoptions(
        'p|port=i'    => \$port,
        'host=s'      => \$host,
		'user=s'      => \$user,
		'group=s'     => \$group,
        'max-workers' => \$max_workers,
        'version!'    => \my $version,
        'c|config=s'  => \my $config_file,
    );

	if ( $version ) {
        print "Stylistics: $Stylistics::VERSION\n";
        exit 0;
    }

	if ( $config_file ) {
        my $config = do $config_file;
        Carp::croak( "$config_file: $@" ) if $@;
        Carp::croak( "$config_file: $!" ) unless defined $config;
        unless ( ref($config) eq 'HASH' ) {
            Carp::croak( "$config_file does not return HashRef." );
        }
        no warnings 'redefine';
        *Stylistics::load_config = sub { $config }
    }

    print "Stylistics: http://${host}:${port}/\n";

    my $loader = Plack::Loader->load('Starman',
        port        => $port,
        host        => $host,
		user		=> $user,
		group		=> $group,
        max_workers => $max_workers,
    );

	return $loader->run( $app );
}

return $app;
